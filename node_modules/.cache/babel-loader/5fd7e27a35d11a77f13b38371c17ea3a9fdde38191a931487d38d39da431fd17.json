{"ast":null,"code":"var _jsxFileName = \"C:\\\\Soft806 CICD\\\\message-front-end\\\\message_frontend\\\\src\\\\components\\\\Chatroom.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { BaseUrl } from \"../consistents\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatroom() {\n  _s();\n  const [chatroom, setChatroom] = useState([]);\n  const token = localStorage.getItem('authToken');\n  useEffect(() => {\n    let config = {\n      method: 'get',\n      maxBodyLength: Infinity,\n      url: BaseUrl + \"message/chatroom/\",\n      headers: {\n        'Authorization': 'token ' + token,\n        'Content-Type': 'application/json'\n      }\n    };\n    axios.request(config).then(response => {\n      console.log(JSON.stringify(response.data));\n      setChatroom(response.data);\n    }).catch(error => {\n      console.log(error);\n      if (!token) {\n        alert(\"You need to log in first.\");\n        window.location.href = '/login';\n      } else alert(\"An error occurred. Please try again.\");\n    });\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chat Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: chatroom.map(chatroom => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: chatroom.name\n      }, chatroom.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(Chatroom, \"7Q+eLe2wVu089FrLrgHj5QazF7w=\");\n_c = Chatroom;\nexport default Chatroom;\nvar _c;\n$RefreshReg$(_c, \"Chatroom\");","map":{"version":3,"names":["React","useEffect","useState","BaseUrl","axios","jsxDEV","_jsxDEV","Chatroom","_s","chatroom","setChatroom","token","localStorage","getItem","config","method","maxBodyLength","Infinity","url","headers","request","then","response","console","log","JSON","stringify","data","catch","error","alert","window","location","href","children","fileName","_jsxFileName","lineNumber","columnNumber","map","name","id","_c","$RefreshReg$"],"sources":["C:/Soft806 CICD/message-front-end/message_frontend/src/components/Chatroom.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {BaseUrl} from \"../consistents\";\r\nimport axios from \"axios\";\r\n\r\nfunction Chatroom() {\r\n    const [chatroom, setChatroom] = useState([]);\r\n    const token = localStorage.getItem('authToken');\r\n\r\n\r\n    useEffect(() => {\r\n        let config = {\r\n            method: 'get',\r\n            maxBodyLength: Infinity,\r\n            url: BaseUrl+ \"message/chatroom/\",\r\n            headers: {\r\n                'Authorization': 'token ' + token,\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n\r\n        axios.request(config)\r\n            .then((response) => {\r\n                console.log(JSON.stringify(response.data));\r\n                setChatroom(response.data);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                if (!token) {\r\n                    alert(\"You need to log in first.\");\r\n                    window.location.href = '/login';\r\n                }else\r\n                    alert(\"An error occurred. Please try again.\");\r\n            });\r\n    }, [token]);\r\n    \r\n    return (\r\n        <div>\r\n            <h1>Chat Room</h1>\r\n            <ul>\r\n                {chatroom.map((chatroom) => (\r\n                    <li key={chatroom.id}>{chatroom.name}</li>\r\n                ))}\r\n            </ul>\r\n            {/*<p><span id={\"token\"}>{token}</span></p>*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chatroom;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,SAAQC,OAAO,QAAO,gBAAgB;AACtC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMS,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAG/CZ,SAAS,CAAC,MAAM;IACZ,IAAIa,MAAM,GAAG;MACTC,MAAM,EAAE,KAAK;MACbC,aAAa,EAAEC,QAAQ;MACvBC,GAAG,EAAEf,OAAO,GAAE,mBAAmB;MACjCgB,OAAO,EAAE;QACL,eAAe,EAAE,QAAQ,GAAGR,KAAK;QACjC,cAAc,EAAE;MACpB;IACJ,CAAC;IAEDP,KAAK,CAACgB,OAAO,CAACN,MAAM,CAAC,CAChBO,IAAI,CAAEC,QAAQ,IAAK;MAChBC,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAACJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAC1CjB,WAAW,CAACY,QAAQ,CAACK,IAAI,CAAC;IAC9B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MACdN,OAAO,CAACC,GAAG,CAACK,KAAK,CAAC;MAClB,IAAI,CAAClB,KAAK,EAAE;QACRmB,KAAK,CAAC,2BAA2B,CAAC;QAClCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;MACnC,CAAC,MACGH,KAAK,CAAC,sCAAsC,CAAC;IACrD,CAAC,CAAC;EACV,CAAC,EAAE,CAACnB,KAAK,CAAC,CAAC;EAEX,oBACIL,OAAA;IAAA4B,QAAA,gBACI5B,OAAA;MAAA4B,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBhC,OAAA;MAAA4B,QAAA,EACKzB,QAAQ,CAAC8B,GAAG,CAAE9B,QAAQ,iBACnBH,OAAA;QAAA4B,QAAA,EAAuBzB,QAAQ,CAAC+B;MAAI,GAA3B/B,QAAQ,CAACgC,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqB,CAC5C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEJ,CAAC;AAEd;AAAC9B,EAAA,CA1CQD,QAAQ;AAAAmC,EAAA,GAARnC,QAAQ;AA4CjB,eAAeA,QAAQ;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}